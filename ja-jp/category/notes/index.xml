<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Lazy Lambda</title>
    <link>https://otaon.github.io/web/ja-jp/category/notes/</link>
    <description>Recent content in Notes on Lazy Lambda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 01 May 2019 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://otaon.github.io/web/ja-jp/category/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go言語ステップアップ(オブジェクト指向プログラミング)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/01/go%E8%A8%80%E8%AA%9E%E3%82%B9%E3%83%86%E3%83%83%E3%83%97%E3%82%A2%E3%83%83%E3%83%97%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/01/go%E8%A8%80%E8%AA%9E%E3%82%B9%E3%83%86%E3%83%83%E3%83%97%E3%82%A2%E3%83%83%E3%83%97%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</guid>
      <description>目的 Go言語でオブジェクト指向プログラミングを行う方法を残す。 参考文献 POSTD - Goはオブジェクト指向言語だろうか？ Go言語でのダックタイピング Qiita</description>
    </item>
    
    <item>
      <title>Go言語入門(インターフェース)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9/</link>
      <pubDate>Sat, 13 Apr 2019 19:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 ポインタ・構造体・インターフェース インターフェース ここではinterface{}</description>
    </item>
    
    <item>
      <title>Go言語入門(構造体・メソッド)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E6%A7%8B%E9%80%A0%E4%BD%93%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89/</link>
      <pubDate>Sat, 13 Apr 2019 18:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E6%A7%8B%E9%80%A0%E4%BD%93%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 ポインタ・構造体・インターフェース 構造体 Goにおける構造体は、C言語と同様に、デ</description>
    </item>
    
    <item>
      <title>Go言語入門(ポインタ)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF/</link>
      <pubDate>Sat, 13 Apr 2019 17:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 ポインタ・構造体・インターフェース ポインタ Goにも、C言語でいうポインタがある。</description>
    </item>
    
    <item>
      <title>Go言語入門(参照型)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%8F%82%E7%85%A7%E5%9E%8B/</link>
      <pubDate>Sat, 13 Apr 2019 16:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%8F%82%E7%85%A7%E5%9E%8B/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 参照型 Goには、参照型と呼ばれる下記の３つの型がある。 slice スライス map マップ</description>
    </item>
    
    <item>
      <title>Go言語入門(制御構文)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%88%B6%E5%BE%A1%E6%A7%8B%E6%96%87/</link>
      <pubDate>Sat, 13 Apr 2019 15:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%88%B6%E5%BE%A1%E6%A7%8B%E6%96%87/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 制御構文 for Goにおけるループ用の制御構文はforのみ。 for { // ... if [条件]</description>
    </item>
    
    <item>
      <title>Go言語入門(スコープ)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97/</link>
      <pubDate>Sat, 13 Apr 2019 14:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 スコープ Goにおいて、定義済み識別子以外の構成要素はパッケージに属する。</description>
    </item>
    
    <item>
      <title>Go言語入門(定数)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%AE%9A%E6%95%B0/</link>
      <pubDate>Sat, 13 Apr 2019 13:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%AE%9A%E6%95%B0/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 定数 Goではconstを使用して定数を定義できる。 const X = 1 // 定数1(整数</description>
    </item>
    
    <item>
      <title>Go言語入門(関数)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E9%96%A2%E6%95%B0/</link>
      <pubDate>Sat, 13 Apr 2019 12:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E9%96%A2%E6%95%B0/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 関数 func 関数名([引数名 型名]*) 戻り値の型名* { 処理 } [引数名 型名]* 同</description>
    </item>
    
    <item>
      <title>Go言語入門(演算子)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E6%BC%94%E7%AE%97%E5%AD%90/</link>
      <pubDate>Sat, 13 Apr 2019 11:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E6%BC%94%E7%AE%97%E5%AD%90/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 演算子 Goでは下記の演算子が使用できる。 種類 &amp;nbsp;&amp;nbsp;演算</description>
    </item>
    
    <item>
      <title>Go言語入門(interface{}型とnil)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80interface%E5%9E%8B%E3%81%A8nil/</link>
      <pubDate>Sat, 13 Apr 2019 10:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80interface%E5%9E%8B%E3%81%A8nil/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 interface{}型とnil interface{}は、{}も含めて型</description>
    </item>
    
    <item>
      <title>Go言語入門(配列型)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E9%85%8D%E5%88%97%E5%9E%8B/</link>
      <pubDate>Sat, 13 Apr 2019 09:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E9%85%8D%E5%88%97%E5%9E%8B/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 配列型 配列の型名は[要素数]型名となる。その後に続けた{}によって初期値</description>
    </item>
    
    <item>
      <title>Go言語入門(リテラル・型変換)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E5%9E%8B%E5%A4%89%E6%8F%9B/</link>
      <pubDate>Sat, 13 Apr 2019 08:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E5%9E%8B%E5%A4%89%E6%8F%9B/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 型の扱い 整数リテラル Goの整数リテラルにはC言語と同じく3種類存在する。</description>
    </item>
    
    <item>
      <title>Go言語入門(Goのプリミティブ型)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80go%E3%81%AE%E3%83%97%E3%83%AA%E3%83%9F%E3%83%86%E3%82%A3%E3%83%96%E5%9E%8B/</link>
      <pubDate>Sat, 13 Apr 2019 07:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80go%E3%81%AE%E3%83%97%E3%83%AA%E3%83%9F%E3%83%86%E3%82%A3%E3%83%96%E5%9E%8B/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 Goのプリミティブ型 真偽値型 型名 説明 bool 真（true）または偽（false</description>
    </item>
    
    <item>
      <title>Go言語入門(変数定義・変数への代入)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%A4%89%E6%95%B0%E5%AE%9A%E7%BE%A9%E5%A4%89%E6%95%B0%E3%81%B8%E3%81%AE%E4%BB%A3%E5%85%A5/</link>
      <pubDate>Sat, 13 Apr 2019 06:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%A4%89%E6%95%B0%E5%AE%9A%E7%BE%A9%E5%A4%89%E6%95%B0%E3%81%B8%E3%81%AE%E4%BB%A3%E5%85%A5/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 変数定義・変数への代入 明示的な変数定義 明示的な変数定義の方法を示す。 見て</description>
    </item>
    
    <item>
      <title>Go言語入門(出力関数)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%87%BA%E5%8A%9B%E9%96%A2%E6%95%B0/</link>
      <pubDate>Sat, 13 Apr 2019 05:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%87%BA%E5%8A%9B%E9%96%A2%E6%95%B0/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 出力関数 fmt.Println() 文字列の最後に改行を付加した文字列を標準出力に出力する。 fmt.Println(&amp;#34;Hello, Golang!&amp;#34;) //</description>
    </item>
    
    <item>
      <title>Go言語入門(定義済み識別子)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%AE%9A%E7%BE%A9%E6%B8%88%E3%81%BF%E8%AD%98%E5%88%A5%E5%AD%90/</link>
      <pubDate>Sat, 13 Apr 2019 04:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E5%AE%9A%E7%BE%A9%E6%B8%88%E3%81%BF%E8%AD%98%E5%88%A5%E5%AD%90/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 定義済み識別子 下記の定義済み識別子は、変数名や関数名に使用できるが、混乱</description>
    </item>
    
    <item>
      <title>Go言語入門(文構造)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E6%96%87%E6%A7%8B%E9%80%A0/</link>
      <pubDate>Sat, 13 Apr 2019 03:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E6%96%87%E6%A7%8B%E9%80%A0/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 文構造 Goでは、各々の文はセミコロン(;)によって区切られる。 ただし、G</description>
    </item>
    
    <item>
      <title>Go言語入門(コメント)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88/</link>
      <pubDate>Sat, 13 Apr 2019 02:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 コメント C言語と同じコメント形式(// or /* */)を使用できる。後者は入れ</description>
    </item>
    
    <item>
      <title>Go言語入門(パッケージ(package)・インポート(import)について)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8package%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88import%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Sat, 13 Apr 2019 01:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8package%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88import%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 基本構文 パッケージ(package)・インポート(import)について 下記記事</description>
    </item>
    
  </channel>
</rss>