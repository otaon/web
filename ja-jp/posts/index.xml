<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lazy Lambda</title>
    <link>https://otaon.github.io/web/ja-jp/posts/</link>
    <description>Recent content in Posts on Lazy Lambda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 28 Jul 2019 21:00:00 +0900</lastBuildDate><atom:link href="https://otaon.github.io/web/ja-jp/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>roswellとvimとslimvでlisp環境を作る</title>
      <link>https://otaon.github.io/web/ja-jp/2019/07/28/roswell%E3%81%A8vim%E3%81%A8slimv%E3%81%A7lisp%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E3%82%8B/</link>
      <pubDate>Sun, 28 Jul 2019 21:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/07/28/roswell%E3%81%A8vim%E3%81%A8slimv%E3%81%A7lisp%E7%92%B0%E5%A2%83%E3%82%92%E4%BD%9C%E3%82%8B/</guid>
      <description>この記事について Vimでlispのコーディングと実行を行うための環境を作成する手順を示す。 参考文献 以下以外にも適宜リンクを記載する。 Common Lis</description>
    </item>
    
    <item>
      <title>p5.js Demo01 Rotating lines</title>
      <link>https://otaon.github.io/web/ja-jp/2019/07/20/p5.js-demo01-rotating-lines/</link>
      <pubDate>Sat, 20 Jul 2019 23:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/07/20/p5.js-demo01-rotating-lines/</guid>
      <description>デモ 概要 3色の線(=点の集まり)をY軸に対して回転させながら表示するだけの単純なプログラム。 単純だけど、blendMode(SCREEN);</description>
    </item>
    
    <item>
      <title>p5.jsをHugoの記事に埋め込む方法</title>
      <link>https://otaon.github.io/web/ja-jp/2019/07/20/p5.js%E3%82%92hugo%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AB%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 20 Jul 2019 16:16:45 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/07/20/p5.js%E3%82%92hugo%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AB%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80%E6%96%B9%E6%B3%95/</guid>
      <description>実例 div id=canvas↓↓ 方法 1. p5.jsのライブラリをstatic/ディレクトリに配置する static/に配置したものは、ビルド時にその</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第12章 リスト処理：やつらがLISPと呼ぶ理由</title>
      <link>https://otaon.github.io/web/ja-jp/2019/06/02/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC12%E7%AB%A0-%E3%83%AA%E3%82%B9%E3%83%88%E5%87%A6%E7%90%86%E3%82%84%E3%81%A4%E3%82%89%E3%81%8Clisp%E3%81%A8%E5%91%BC%E3%81%B6%E7%90%86%E7%94%B1/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/06/02/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC12%E7%AB%A0-%E3%83%AA%E3%82%B9%E3%83%88%E5%87%A6%E7%90%86%E3%82%84%E3%81%A4%E3%82%89%E3%81%8Clisp%E3%81%A8%E5%91%BC%E3%81%B6%E7%90%86%E7%94%B1/</guid>
      <description>この章について この章では、リストついて説明する。 12.1 「リストなんてない」 Common Lispにおいては、リストというデータ構造が構築されているわけではな</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第11章 コレクション</title>
      <link>https://otaon.github.io/web/ja-jp/2019/06/01/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC11%E7%AB%A0-%E3%82%B3%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/06/01/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC11%E7%AB%A0-%E3%82%B3%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/</guid>
      <description>この章について この章では、複数の値を1つのオブジェクトにまとめたデータ型(コレクション)について説明する。 11.1 ベクタ ベクタは、整数でインデック</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第10章 数、文字、そして文字列</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/31/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC10%E7%AB%A0-%E6%95%B0%E6%96%87%E5%AD%97%E3%81%9D%E3%81%97%E3%81%A6%E6%96%87%E5%AD%97%E5%88%97/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/31/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC10%E7%AB%A0-%E6%95%B0%E6%96%87%E5%AD%97%E3%81%9D%E3%81%97%E3%81%A6%E6%96%87%E5%AD%97%E5%88%97/</guid>
      <description>この章について この章では、Lispのスカラーのデータ型である数、文字、文字列(の一部の仕様)について説明する。 10.1 数 Common Lispでは、分数、浮動</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第9章 実践：ユニットテストフレームワーク</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/28/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC9%E7%AB%A0-%E5%AE%9F%E8%B7%B5%E3%83%A6%E3%83%8B%E3%83%83%E3%83%88%E3%83%86%E3%82%B9%E3%83%88%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/28/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC9%E7%AB%A0-%E5%AE%9F%E8%B7%B5%E3%83%A6%E3%83%8B%E3%83%83%E3%83%88%E3%83%86%E3%82%B9%E3%83%88%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/</guid>
      <description>この章について この章では、マクロを使ってユニットテストフレームワークを作成する。 テストとは、結局のところ**承認(accept)か拒否(re</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第8章 マクロ：自分で定義しよう</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/27/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC8%E7%AB%A0-%E3%83%9E%E3%82%AF%E3%83%AD%E8%87%AA%E5%88%86%E3%81%A7%E5%AE%9A%E7%BE%A9%E3%81%97%E3%82%88%E3%81%86/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/27/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC8%E7%AB%A0-%E3%83%9E%E3%82%AF%E3%83%AD%E8%87%AA%E5%88%86%E3%81%A7%E5%AE%9A%E7%BE%A9%E3%81%97%E3%82%88%E3%81%86/</guid>
      <description>この章について この章では、マクロの定義の方法について示す。 8.1 マックはじめて物語 省略。 8.2 マクロ展開時 vs. 実行時 マクロを書く時に自分で記述している</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第7章 マクロ：標準的な制御構文の構築</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/26/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC7%E7%AB%A0-%E3%83%9E%E3%82%AF%E3%83%AD%E6%A8%99%E6%BA%96%E7%9A%84%E3%81%AA%E5%88%B6%E5%BE%A1%E6%A7%8B%E6%96%87%E3%81%AE%E6%A7%8B%E7%AF%89/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/26/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC7%E7%AB%A0-%E3%83%9E%E3%82%AF%E3%83%AD%E6%A8%99%E6%BA%96%E7%9A%84%E3%81%AA%E5%88%B6%E5%BE%A1%E6%A7%8B%E6%96%87%E3%81%AE%E6%A7%8B%E7%AF%89/</guid>
      <description>この章について この章では、Common Lispに組み込まれているマクロの例と、その使い方について示す。 7.1 whenとunless 先述の通り、i</description>
    </item>
    
    <item>
      <title>書籍 実践 Common Lisp 第6章 変数</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/25/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC6%E7%AB%A0-%E5%A4%89%E6%95%B0/</link>
      <pubDate>Sat, 25 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/25/%E6%9B%B8%E7%B1%8D-%E5%AE%9F%E8%B7%B5-common-lisp-%E7%AC%AC6%E7%AB%A0-%E5%A4%89%E6%95%B0/</guid>
      <description>6.1 変数の基礎 Common Lispは、**動的型付け(dynamically typed)**であり、型エラーは動的に検出される。 また、**強い型付け(s</description>
    </item>
    
    <item>
      <title>Emacsの基本コマンド</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/18/emacs%E3%81%AE%E5%9F%BA%E6%9C%AC%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/18/emacs%E3%81%AE%E5%9F%BA%E6%9C%AC%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</guid>
      <description>本稿の目的 自分は普段Vimを使っており、Lispを書くにあたってはSwankとSlimvを利用している。 これでもある程度は書けるが、Slim</description>
    </item>
    
    <item>
      <title>オブジェクト指向原則集(SOLID、他):依存性逆転の原理について</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96%E4%BE%9D%E5%AD%98%E6%80%A7%E9%80%86%E8%BB%A2%E3%81%AE%E5%8E%9F%E7%90%86%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Sun, 05 May 2019 05:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96%E4%BE%9D%E5%AD%98%E6%80%A7%E9%80%86%E8%BB%A2%E3%81%AE%E5%8E%9F%E7%90%86%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>目的 プログラミングや設計において守るべき「SOLID原則」についての学習記録を残す。 参考文献 SOLID全体の説明については「オブジェクト指向</description>
    </item>
    
    <item>
      <title>オブジェクト指向原則集(SOLID、他):リスコフの置換原則について</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96%E3%83%AA%E3%82%B9%E3%82%B3%E3%83%95%E3%81%AE%E7%BD%AE%E6%8F%9B%E5%8E%9F%E5%89%87%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Sun, 05 May 2019 03:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96%E3%83%AA%E3%82%B9%E3%82%B3%E3%83%95%E3%81%AE%E7%BD%AE%E6%8F%9B%E5%8E%9F%E5%89%87%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>目的 プログラミングや設計において守るべき「SOLID原則」のうち、「リスコフの置換原則」についての学習記録を残す。 参考文献 「オブジェクト指向</description>
    </item>
    
    <item>
      <title>オブジェクト指向原則集(SOLID、他):開放／閉鎖原則について</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96%E9%96%8B%E6%94%BE%E9%96%89%E9%8E%96%E5%8E%9F%E5%89%87%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Sun, 05 May 2019 02:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96%E9%96%8B%E6%94%BE%E9%96%89%E9%8E%96%E5%8E%9F%E5%89%87%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>目的 プログラミングや設計において守るべき「SOLID原則」のうち、「開放／閉鎖原則」についての学習記録を残す。 参考文献 「オブジェクト指向原則</description>
    </item>
    
    <item>
      <title>オブジェクト指向原則集(SOLID、他)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/05/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E5%8E%9F%E5%89%87%E9%9B%86solid%E4%BB%96/</guid>
      <description>目的 プログラミングや設計において守るべき、クラスに関する原則である「SOLID原則」についての学習記録を残す。 参考文献 SOLIDについて POSTD -</description>
    </item>
    
    <item>
      <title>ディスパッチ・仮想関数テーブルについて学ぶ</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/02/%E3%83%87%E3%82%A3%E3%82%B9%E3%83%91%E3%83%83%E3%83%81%E4%BB%AE%E6%83%B3%E9%96%A2%E6%95%B0%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E5%AD%A6%E3%81%B6/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/02/%E3%83%87%E3%82%A3%E3%82%B9%E3%83%91%E3%83%83%E3%83%81%E4%BB%AE%E6%83%B3%E9%96%A2%E6%95%B0%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E5%AD%A6%E3%81%B6/</guid>
      <description>目的 プログラミングにおいて頻出する「ディスパッチ」という概念についての学習記録を残す。 参考文献 本文中に記す。 ディスパッチとは ディスパッチとは</description>
    </item>
    
    <item>
      <title>ポリモーフィズム・部分型付け・派生型</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/01/%E3%83%9D%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%95%E3%82%A3%E3%82%BA%E3%83%A0%E9%83%A8%E5%88%86%E5%9E%8B%E4%BB%98%E3%81%91%E6%B4%BE%E7%94%9F%E5%9E%8B/</link>
      <pubDate>Wed, 01 May 2019 23:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/01/%E3%83%9D%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%95%E3%82%A3%E3%82%BA%E3%83%A0%E9%83%A8%E5%88%86%E5%9E%8B%E4%BB%98%E3%81%91%E6%B4%BE%E7%94%9F%E5%9E%8B/</guid>
      <description>目的 部分型付け・派生型・リスコフの置換原則・仮想関数テーブルについての学習記録を残す。 参考文献 本文中に記す。 ポリモーフィズム(部分型付け) と</description>
    </item>
    
    <item>
      <title>HugoにTOCを追加する</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/01/hugo%E3%81%ABtoc%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 01 May 2019 22:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/01/hugo%E3%81%ABtoc%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B/</guid>
      <description>目的 HugoにTOC(目次)を追加する方法を残す。 参考文献 わからないから調べるブログ - Hugoに開閉式の目次を実装する方法 Qiita - HUGOで作れ</description>
    </item>
    
    <item>
      <title>Go言語ステップアップ(オブジェクト指向プログラミング)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/05/01/go%E8%A8%80%E8%AA%9E%E3%82%B9%E3%83%86%E3%83%83%E3%83%97%E3%82%A2%E3%83%83%E3%83%97%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/05/01/go%E8%A8%80%E8%AA%9E%E3%82%B9%E3%83%86%E3%83%83%E3%83%97%E3%82%A2%E3%83%83%E3%83%97%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</guid>
      <description>目的 Go言語でオブジェクト指向プログラミングを行う方法を残す。 参考文献 POSTD - Goはオブジェクト指向言語だろうか？ Go言語でのダックタイピング Qiita</description>
    </item>
    
    <item>
      <title>Go言語入門(インターフェース)</title>
      <link>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9/</link>
      <pubDate>Sat, 13 Apr 2019 19:00:00 +0900</pubDate>
      
      <guid>https://otaon.github.io/web/ja-jp/2019/04/13/go%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9/</guid>
      <description>目的 Go言語の基本構文を残す。 参考文献 スターティング Go言語 ポインタ・構造体・インターフェース インターフェース ここではinterface{}</description>
    </item>
    
  </channel>
</rss>
